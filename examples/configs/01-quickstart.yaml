# ============================================================================
# QUICKSTART CONFIG - Get started with DeepFabric in 5 minutes
# ============================================================================
# Purpose: Generate a simple Q&A dataset with minimal configuration
# Usage: deepfabric start examples/configs/01-quickstart.yaml
# Output: dataset.jsonl with basic conversation examples
# ============================================================================

# Define the overall purpose of your dataset
dataset_system_prompt: |
  You are a helpful AI assistant that provides accurate and informative responses.

# Topic generation - creates a tree of related topics
topic_graph:
  topic_prompt: "Python programming fundamentals"
  provider: "openai"
  model: "gpt-4o"
  temperature: 0.8
  degree: 3  # Number of subtopics per branch
  depth: 3   # Tree depth (2-3 is usually sufficient)
  save_as: "topics.jsonl"

# Data generation - creates the actual training examples
data_engine:
  generation_system_prompt: "Generate clear, educational Q&A pairs about Python programming."
  instructions: "Create diverse questions and detailed answers suitable for learning Python."

  # Conversation configuration
  conversation_type: "basic"  # Simple Q&A format

  # Model configuration
  provider: "openai"
  model: "gpt-4o"
  temperature: 0.7
  max_retries: 3  # Retry on API failures

# Dataset configuration
dataset:
  save_as: "dataset.jsonl"

  creation:
    num_steps: 2      # Number of examples to generate
    batch_size: 2      # Parallel generation batch size
    sys_msg: true      # Include system message in output

# ============================================================================
# Next Steps:
# 1. Run: deepfabric start examples/configs/01-quickstart.yaml
# 2. Check output: dataset.jsonl
# 3. Customize: Change topic_prompt to your domain
# 4. Scale up: Increase num_steps for more examples
#
# For more advanced features, see:
# - 02-conversation-types.yaml - Different conversation formats
# - 03-reasoning-styles.yaml - Chain-of-thought reasoning
# - 04-agent-tools.yaml - Tool-calling agents
# ============================================================================
